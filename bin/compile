#!/bin/bash

set -e

indent() {
  sed -u 's/^/       /'
}

echo "-----> Install ImageMagick"

# General build pack environment variables
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3
VENDOR_DIR="$BUILD_DIR/vendor"
INSTALL_DIR="$VENDOR_DIR/imagemagick"

# User config environment variables
IMAGE_MAGICK_VERSION="$(cat $ENV_DIR/IMAGE_MAGICK_VERSION)"
IMAGE_MAGICK_SHA="$(cat $ENV_DIR/IMAGE_MAGICK_SHA)"
IMAGE_MAGICK_HOST="$(cat $ENV_DIR/IMAGE_MAGICK_HOST)"

if [ -f $ENV_DIR/GHOSTSCRIPT_VERSION ]; then
  GHOSTSCRIPT_VERSION="$(cat $ENV_DIR/GHOSTSCRIPT_VERSION)"
  GHOSTSCRIPT_SHORT_VERSION="$(cat $ENV_DIR/GHOSTSCRIPT_SHORT_VERSION)"
  GHOSTSCRIPT_SHA="$(cat $ENV_DIR/GHOSTSCRIPT_SHA)"
  GHOSTSCRIPT_HOST="$(cat $ENV_DIR/GHOSTSCRIPT_HOST)"
fi

CACHE_FILE="$CACHE_DIR/imagemagick-$IMAGE_MAGICK_VERSION-with-gs-v2-$GHOSTSCRIPT_VERSION.tar.gz"

if [ ! -f $CACHE_FILE ]; then
  # install imagemagick
  IMAGE_MAGICK_VERSION="${IMAGE_MAGICK_VERSION:-6.9.3-10}"
  IMAGE_MAGICK_FILE="ImageMagick-$IMAGE_MAGICK_VERSION.tar.xz"
  IMAGE_MAGICK_DIR="ImageMagick-$IMAGE_MAGICK_VERSION"
  # SSL cert used on imagemagick not recognized by heroku.
  IMAGE_MAGICK_URL="$IMAGE_MAGICK_HOST/$IMAGE_MAGICK_FILE"

  GHOSTSCRIPT_SHORT_VERSION="${GHOSTSCRIPT_SHORT_VERSION:-924}"
  GHOSTSCRIPT_VERSION="${GHOSTSCRIPT_VERSION:-9.24}"
  GHOSTSCRIPT_FILE="ghostscript-$GHOSTSCRIPT_VERSION.tar.gz"
  GHOSTSCRIPT_DIR="ghostscript-$GHOSTSCRIPT_VERSION"
  GHOSTSCRIPT_HOST="${GHOSTSCRIPT_HOST:-https://github.com/ArtifexSoftware/ghostpdl-downloads/releases/download}"
  GHOSTSCRIPT_URL="$GHOSTSCRIPT_HOST/gs$GHOSTSCRIPT_SHORT_VERSION/$GHOSTSCRIPT_FILE"
  GHOSTSCRIPT_SHA="${GHOSTSCRIPT_SHA:-a85050c9604d7671d58e2415682482fb60852cb4de746cd07ee5a51585507f73f3ae61d6b52764230e333fb45d6a31666bf3cbad77215d997b6a5c3c64cf71cd}"

  # Install Ghostscript, required to e.g. convert PDF to PNG.
  echo "-----> Downloading Ghostscript from $GHOSTSCRIPT_URL"
  wget $GHOSTSCRIPT_URL -P $BUILD_DIR | indent

  echo "-----> Checking checksum of Ghostscript from $GHOSTSCRIPT_URL"
  echo "$GHOSTSCRIPT_SHA  $BUILD_DIR/$GHOSTSCRIPT_FILE" | sha512sum -c -

  echo "-----> Extracting Ghostscript from $BUILD_DIR/$GHOSTSCRIPT_FILE"
  tar xfz $BUILD_DIR/$GHOSTSCRIPT_FILE | indent

  echo "-----> Building Ghostscript"
  cd $GHOSTSCRIPT_DIR
  ./configure --prefix=$INSTALL_DIR
  make && make install
  cd ..
  rm -rf $GHOSTSCRIPT_DIR

  echo "-----> Downloading ImageMagick from $IMAGE_MAGICK_URL"
  wget $IMAGE_MAGICK_URL -P $BUILD_DIR | indent

  echo "-----> Checking checksum of ImageMagick from $IMAGE_MAGICK_URL"
  echo "$IMAGE_MAGICK_SHA  $BUILD_DIR/$IMAGE_MAGICK_FILE" | sha256sum -c

  echo "-----> Extracting ImageMagick from $BUILD_DIR/$IMAGE_MAGICK_FILE"
  if [ ! -f $BUILD_DIR/$IMAGE_MAGICK_FILE ]; then
    echo "Error: Unable to download ImageMagick" | indent
    ls $BUILD_DIR | indent
    exit 1;
  fi
  tar xvf $BUILD_DIR/$IMAGE_MAGICK_FILE | indent

  echo "-----> Building ImageMagick"
  cd $IMAGE_MAGICK_DIR
  export CPPFLAGS="-I$INSTALL_DIR/include"
  export LDFLAGS="-L$INSTALL_DIR/lib"
  ./configure --with-zero-configuration --without-gvc --prefix=$INSTALL_DIR
  make && make install
  cd ..
  rm -rf $IMAGE_MAGICK_DIR

  # cache for future deploys
  echo "-----> Caching ImageMagick installation"
  mkdir -p $CACHE_DIR
  cd $VENDOR_DIR
  REL_INSTALL_DIR="imagemagick"
  tar czf $REL_INSTALL_DIR.tar.gz $REL_INSTALL_DIR
  mv $REL_INSTALL_DIR.tar.gz $CACHE_FILE

else
  # cache exists, extract it
  echo "-----> Extracting ImageMagick $CACHE_FILE => $VENDOR_DIR"
  tar xzf $CACHE_FILE -C $VENDOR_DIR
fi

echo "-----> Writing policy file"
mkdir -p $INSTALL_DIR/etc/ImageMagick
cat > $INSTALL_DIR/policy.xml <<EOF
<policymap>
  <policy domain="coder" rights="none" pattern="EPHEMERAL" />
  <policy domain="coder" rights="none" pattern="HTTPS" />
  <policy domain="coder" rights="none" pattern="MVG" />
  <policy domain="coder" rights="none" pattern="MSL" />
</policymap>
EOF

# update PATH and LD_LIBRARY_PATH
echo "-----> Updating environment variables"
PROFILE_PATH="$BUILD_DIR/.profile.d/imagemagick.sh"
ACTUAL_INSTALL_PATH="$HOME/vendor/imagemagick"
mkdir -p $(dirname $PROFILE_PATH)
echo "export PATH=$ACTUAL_INSTALL_PATH/bin:\$PATH" >> $PROFILE_PATH
echo "export LD_LIBRARY_PATH=$ACTUAL_INSTALL_PATH/lib:\$LD_LIBRARY_PATH" >> $PROFILE_PATH
echo "export MAGICK_CONFIGURE_PATH=$ACTUAL_INSTALL_PATH" >> $PROFILE_PATH
